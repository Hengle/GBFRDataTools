include "BaseStructs.fbs";

// all FlatSharp FBS attributes start with the 'fs_' prefix.
attribute "fs_serializer";

namespace GBFRDataTools.FlatBuffers;

enum VertexBufferType:ubyte (bit_flags) 
{
    POS_NOR_TAN_UV0 = 0, // 0x0F, 0x00, 0x20
    BLENDINDICES    = 1, // 0x0C, 0x00, 0x08
    BLENDINDICES_2  = 2, // 0x0C, 0x01, 0x08
    BLENDWEIGHT     = 3, // 0x0B, 0x00, 0x08
    BLENDWEIGHT_2   = 4, // 0x0B, 0x01, 0x08
    COLOR           = 5, // 0x05, 0x00, 0x04
    TEXCOORD        = 6, // 0x08, 0x01, 0x04
}

// asset::impl::ModelInfoImpl
table ModelInfo (fs_serializer) {
    magic:uint; // 0x134B249
    lods:[StreamLOD];
    shadow_lods:[StreamLOD];
    a4:[float];
    sub_meshes:[SubMeshInfo];
    materials:[MaterialInfo];
    deform_bone_to_bone_index_table:[ushort];
    deform_bone_boundary_box:[BoundaryBox];
    vec4_9:Vec4;
    a10:ModelInfo_A10; // Used very rarely in bgXXXX files
    vec3_11:Vec3;
    f12:float;
    f13:float;
    f14:float;
    f15:float;
    f16:float;
    f17:float;
    f18:float;
    f19:float;
    f20:float;
    byte21:byte;
    byte22:byte;
    bool23:bool;
    bool24:bool;
    bool25:bool;
    bool26:bool;
    bool27:bool;
    bool28:bool;
    bool29:bool;
    bool30:bool;
    bool31:bool; // Unused?
    bool32:bool;
}

table StreamLOD
{
    mesh_buffers:[MeshBufferLocator];
    chunks:[LODChunk];
    vertex_count:int;
    index_count:int;
    buffer_types:VertexBufferType;
    a6:ubyte;
}

table SubMeshInfo
{
    name:string;
    bbox:BoundaryBox;
}

table MaterialInfo
{
    unique_name_hash:uint;
    unk_flags:byte;
}

table ModelInfo_A10
{
    unk_id:uint; // Not always present
    a2:float;
    a3:byte;
    a4:byte;
}

/////////////////
// Util structs
/////////////////
struct MeshBufferLocator
{
    offset:ulong;
    size:ulong;
}

struct LODChunk
{
    poly_offset:int;
    poly_count:int;
    sub_mesh_id:byte;
    material_id:byte;
    a5:byte;
    a6:byte;
}

root_type ModelInfo;